When would you want to use a remote repository rather than keeping all your work local?

working on project with multiple contributors
using multiple computers to complete work
want your progress to be visible to the public

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

manually pulling changes will allow users to only pull when they want to. if there are multiple contributors, it allows for separation of work.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

forks - clone repositories on github
clones - copy repositories from github to local computer or copy from local to local
branches - within repositories

use fork to propose code changes (fix bugs) to an already exisiting repository, or use one as a starting point for a new project

use clones on github repository to make local changes, then push and pull to remote

use branches when making experimental changes on exisitng code to ensure still have
fully functioning code in case you break anything

What is the benefit of having a copy of the last known state of the remote stored locally?

if want to compare changes on the remote to updates you made locally, without commiting to the changes.
give you a chance to review the differences offline, before merging the branches together

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I would save different versions of files, with different suffixes with version number, modifier, etc. and send those to each other
this would make it super hard to find and compare changes or fix errors.  another option that i have used in the past is using dropbox,
google drive and have collaborators permissions read/write.  this works well when there are not too many files you are working on.  this
is also a little easier to use and would make collaborating quicker; however, it is not good to use when the project has multiple files
that are all linked together, like in a website.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

if you want other collaborators to review your code before making the change to master